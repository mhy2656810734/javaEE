package network;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.util.Scanner;

/**
 * Udp版本的回显服务器客户端
 * @author 26568
 * @date 2023-02-03 11:41
 */
public class UdpEchoClient1 {
    // 客户端必须知道服务器的ip地址 端口号
    // 一次通信必须知道 源ip目的ip 源端口和目的端口
    // 服务器的端口和ip必须告诉客户端
    // 客户端的ip是127.0.0.1 端口号可以随机分配
    private DatagramSocket socket = null;
    private String serverIp = null;
    private  int serverPort = 0;
    public UdpEchoClient1(String serverIp,int serverPort) throws SocketException {
        socket = new DatagramSocket();
        this.serverIp = serverIp;
        this.serverPort = serverPort;
    }
    public void start() throws IOException {
        System.out.println("客户端启动");
        Scanner scanner = new Scanner(System.in);
        while (true) {
            // 1.从控制台读取数据
            System.out.print("> ");
            String request = scanner.next();
            if (request.equals("exit")) {
                System.out.println("goodbye");
                break;
            }
            // 2.构造成Udp数据并发送
            // 此时需要将服务器ip和端口号都传进去,但是此处的ip需要的是一个32位整数
            // 上述serverIp是一个字符串,所以,需要使用InetAddress.getByName()进行转换
            DatagramPacket requestPacket = new DatagramPacket(request.getBytes(),request.getBytes().length,
                    InetAddress.getByName(serverIp),serverPort);
            socket.send(requestPacket);
            // 3.读取服务器的响应并解析
            DatagramPacket reponsePacket = new DatagramPacket(new byte[4096],4096);
            socket.receive(reponsePacket);
            String response = new String(reponsePacket.getData(),0,reponsePacket.getLength());
            // 4.把解析好的结果显示出来
            System.out.println(response);
        }
    }

    public static void main(String[] args) throws IOException {
        UdpEchoClient1 client1 = new UdpEchoClient1("127.0.0.1",9090);
        client1.start();
    }
}
